name: Backend CI

on:
  push:
    # TODO enable later again
    #paths:
    #  - 'backend/**'
  pull_request:
    paths:
      - 'backend/**'


jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    strategy:
      matrix:
        go-version: [ '1.22.x' ]

    steps:
      - uses: actions/checkout@v4
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install dependencies
        run: go get .
      - name: Build
        run: go build -v ./...
      - name: Test with the Go CLI
        run: go test
  
  integration-test:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: backend/test

    steps:
      - uses: actions/checkout@v4

      # Setup Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      # Setup Docker Compose TODO make it nicer
      - name: Install Docker Compose
        run: |
          sudo apt-get install -y docker-compose
          docker-compose --version
      
      # Build the Docker Compose services
      - name: Build Docker Compose services
        run: docker-compose build
      
      # Run the Docker Compose services
      - name: Run Docker Compose services
        run: docker-compose up -d
      
      # Wait for 20s
      - name: Wait for services to start
        run: sleep 20
      
      # Print Docker Compose logs
      - name: Print Docker Compose logs
        run: docker-compose logs
      
      # Setup python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
      
      # Install dependencies
      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Import emulator's TLS/SSL certificate
        run: |
          curl -k https://localhost:8081/_explorer/emulator.pem > ~/emulatorcert.crt
          cat ~/emulatorcert.crt
          sudo cp ~/emulatorcert.crt /usr/local/share/ca-certificates/
          sudo update-ca-certificates

      # Run the integration tests
      - name: Run integration tests
        run: pytest
      
      # Print Docker Compose logs
      - name: Print Docker Compose logs
        if: always()
        run: docker-compose logs

      # Stop the Docker Compose services
      - name: Stop Docker Compose services
        run: docker-compose down


    
